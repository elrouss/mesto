(()=>{"use strict";var __webpack_modules__={670:()=>{eval('\n;// CONCATENATED MODULE: ./src/scripts/utils/constants.js\n// ПЕРЕМЕННЫЕ\n// Контейнер для добавления фотокарточек\nvar photoGallery = document.querySelector(\'.gallery\');\n\n// Модальное окно с формой редактирования информации\nvar popupTypeEditingProfileInfo = document.querySelector(\'.popup_type_edit-profile\');\n// Форма и поля\nvar formEditingProfileInfo = document.querySelector(\'.popup__form_type_profile\');\nvar nameInput = document.querySelector(\'.popup__form-field_type_profile-name\');\nvar jobInput = document.querySelector(\'.popup__form-field_type_profile-job\');\n\n// Модальное окно с формой добавления новой фотокарточки\nvar popupTypeAddingPhotocard = document.querySelector(\'.popup_type_add-photocard\');\n// Поля формы\nvar formAddingPhotocard = document.querySelector(\'.popup__form_type_photocards\');\n\n// Модальное окно с открытием фотографии карточки\nvar popupPhotoZoom = document.querySelector(\'.popup_type_image\');\n\n// Кнопки открытия модальных окон\nvar profileEditButton = document.querySelector(\'.profile__edit-button\');\nvar profileAddButton = document.querySelector(\'.profile__add-button\');\n\n// ОБЪЕКТ ВАЛИДАЦИИ\nvar validationSettings = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__form-field\',\n  submitButtonSelector: \'.popup__submit-button\',\n  inactiveButtonClass: \'popup__submit-button_disabled\',\n  inputErrorClass: \'popup__form-field_type_error\',\n  errorClass: \'popup__error_visible\'\n};\n;// CONCATENATED MODULE: ./src/scripts/components/Api.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nvar Api = /*#__PURE__*/function () {\n  function Api(_ref) {\n    var url = _ref.url,\n      headers = _ref.headers;\n    _classCallCheck(this, Api);\n    this._url = url;\n    this._headers = headers;\n  }\n\n  // Проверка статуса\n  _createClass(Api, [{\n    key: "_checkResponse",\n    value: function _checkResponse(response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(response.status, "/").concat(response.statusText));\n      }\n    }\n\n    // Получение информации о пользователе\n  }, {\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return fetch("".concat(this._url, "/users/me"), {\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n\n    // Изменение информации о пользователе\n  }, {\n    key: "editUserInfo",\n    value: function editUserInfo(name, about) {\n      return fetch("".concat(this._url, "/users/me"), {\n        method: \'PATCH\',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(this._checkResponse);\n    }\n\n    // Получение массива карточек\n  }, {\n    key: "getPhotocards",\n    value: function getPhotocards() {\n      return fetch("".concat(this._url, "/cards"), {\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n\n    // Добавление новой карточки в галерею\n  }, {\n    key: "addNewPhotocard",\n    value: function addNewPhotocard(name, link) {\n      return fetch("".concat(this._url, "/cards"), {\n        method: \'POST\',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(this._checkResponse);\n    }\n\n    // showPhotocardLikes();\n\n    // deletePhotocard();\n  }]);\n  return Api;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/components/Card.js\nfunction Card_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Card_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Card_createClass(Constructor, protoProps, staticProps) { if (protoProps) Card_defineProperties(Constructor.prototype, protoProps); if (staticProps) Card_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n// КЛАСС ФОТОКАРТОЧКИ\nvar Card = /*#__PURE__*/function () {\n  function Card(_ref, templateSelector, handleCardClick) {\n    var name = _ref.name,\n      link = _ref.link;\n    Card_classCallCheck(this, Card);\n    // Передача названия, ссылки, селектора шаблона и слушателя карточки\n    this._title = name;\n    this._alt = "\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0441\\u0442\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438: ".concat(this._title);\n    this._image = link;\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n  }\n\n  // Метод получения шаблона разметки из HTML\n  Card_createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      var cardElement = document.querySelector(this._templateSelector).content.querySelector(\'.gallery__item\').cloneNode(true);\n      return cardElement;\n    }\n\n    // Метод переключения состояния кнопки лайка\n  }, {\n    key: "_handleButtonLike",\n    value: function _handleButtonLike() {\n      this._cardButtonLike.classList.toggle(\'gallery__item-like-button_active\');\n    }\n\n    // Метод удаления карточки\n  }, {\n    key: "_deleteCard",\n    value: function _deleteCard() {\n      this._element.remove();\n    }\n\n    // Обработчики событий\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      // Лайки\n      this._cardButtonLike = this._element.querySelector(\'.gallery__item-like-button\');\n      this._cardButtonLike.addEventListener(\'click\', function () {\n        _this._handleButtonLike();\n      });\n\n      // Удаление карточки\n      this._cardButtonDeletion = this._element.querySelector(\'.gallery__item-delete-button\');\n      this._cardButtonDeletion.addEventListener(\'click\', function () {\n        _this._deleteCard();\n      });\n\n      // Получение на вход данных карточки\n      this._cardImage = this._element.querySelector(\'.gallery__item-image\');\n      this._cardImage.addEventListener(\'click\', function () {\n        _this._handleCardClick(_this._title, _this._image, _this._alt);\n      });\n    }\n\n    // Публичный метод создания карточки, возвращающий полностью работоспособный и наполненный данными элемент карточки\n  }, {\n    key: "generateCard",\n    value: function generateCard() {\n      this._element = this._getTemplate();\n      this._setEventListeners();\n      this._cardTitle = this._element.querySelector(\'.gallery__item-title\');\n      this._cardTitle.textContent = this._title;\n      this._cardImage.src = this._image;\n      this._cardImage.alt = this._alt;\n      return this._element;\n    }\n  }]);\n  return Card;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/components/Section.js\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n// КЛАСС ПОЛУЧЕНИЯ ГОТОВОЙ РАЗМЕТКИ И ВСТАВКИ ЕЕ В DOM\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerElement) {\n    var renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._renderer = renderer; // Отрисовка\n    this._container = containerElement; // Контейнер для вставки элементов разметки\n  }\n\n  // Метод приема DOM-элемента и добавления его в контейнер\n  Section_createClass(Section, [{\n    key: "addItem",\n    value: function addItem(element) {\n      this._container.prepend(element);\n    }\n\n    // Метод отрисовки всех элементов, которую возвращает Card\n  }, {\n    key: "renderItems",\n    value: function renderItems(items) {\n      var _this = this;\n      items.reverse().forEach(function (item) {\n        _this._renderer(item);\n      });\n    }\n  }]);\n  return Section;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/components/Popup.js\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupElement) {\n    var _this = this;\n    Popup_classCallCheck(this, Popup);\n    _defineProperty(this, "_handleEscClose", function (evt) {\n      if (evt.key === \'Escape\') _this.close();\n    });\n    this._popup = popupElement; // Селектор попапа\n  }\n\n  // Метод открытия попапа\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popup.classList.add(\'popup_opened\');\n      document.addEventListener(\'keydown\', this._handleEscClose);\n    }\n\n    // Метод закрытия попапа\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove(\'popup_opened\');\n      document.removeEventListener(\'keydown\', this._handleEscClose);\n    }\n\n    // Метод закрытия попапа клавишей "Escape" (чтобы не потерять контекст, переделано на стрелочную функцию)\n  }, {\n    key: "setEventListeners",\n    value:\n    // Метод установки обработчиков событий\n    function setEventListeners() {\n      var _this2 = this;\n      this._popup.addEventListener(\'mousedown\', function (evt) {\n        if (evt.target.classList.contains(\'popup_opened\') || evt.target.classList.contains(\'popup__closing-button\')) _this2.close();\n      });\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/components/PopupWithImage.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._title = _this._popup.querySelector(\'.popup__image-caption\');\n    _this._image = _this._popup.querySelector(\'.popup__image\');\n    _this._alt = _this._popup.querySelector(\'.popup__image\');\n    return _this;\n  }\n\n  // Перезаписанный метод открытия попапа со вставкой изображения и подписью к нему, альтом\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(name, link, alt) {\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n      this._title.textContent = name;\n      this._image.src = link;\n      this._alt.alt = alt;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/scripts/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, submit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._submitForm = submit;\n    _this._popupForm = _this._popup.querySelector(\'.popup__form\');\n    _this._popupFormInputs = Array.from(_this._popup.querySelectorAll(\'.popup__form-field\'));\n    return _this;\n  }\n\n  // Геттер сбора значений всех полей формы (создание пустого объекта, проход по инпутам и заполнение объекта свойствами)\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._popupFormInputsValues = new Object();\n      this._popupFormInputs.forEach(function (input) {\n        _this2._popupFormInputsValues[input.name] = input.value;\n      });\n      return this._popupFormInputsValues;\n    }\n\n    // Метод сбрасывания формы при закрытии попапа\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._popupForm.reset(); // метод определяется для формы\n    }\n\n    // Метод установки обработчиков событий (добавление обработчиков клика иконке закрытия и сабмиту формы)\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this3 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._popup.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        _this3._submitForm(_this3._getInputValues());\n      });\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/scripts/components/UserInfo.js\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n// КЛАСС УПРАВЛЕНИЯ ОТОБРАЖЕНИЕМ ИНФОРМАЦИИ О ПОЛЬЗОВАТЕЛЕ НА СТРАНИЦЕ\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var profileName = _ref.profileName,\n      profileJob = _ref.profileJob,\n      profileAvatar = _ref.profileAvatar;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._userName = document.querySelector(profileName);\n    this._userDescription = document.querySelector(profileJob);\n    this._userAvatar = document.querySelector(profileAvatar);\n  }\n\n  // Возвращение объекта с данными пользователя\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return {\n        profileName: this._userName.textContent,\n        profileJob: this._userDescription.textContent,\n        profileAvatar: this._userAvatar.src\n      };\n    }\n\n    // Добавление новых данных пользователя на страницу\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(profileName, profileJob, profileAvatar) {\n      this._userName.textContent = profileName;\n      this._userDescription.textContent = profileJob;\n      this._userAvatar.src = profileAvatar;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/components/FormValidator.js\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n// КЛАСС ВАЛИДАЦИИ ФОРМЫ (это валидация только одной формы; в ПР6 функция enableValidation() отвечала за валидацию всех форм)\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(settings, formElement) {\n    FormValidator_classCallCheck(this, FormValidator);\n    // Создание ключей объекта\n    this._settings = settings;\n    this._formElement = formElement;\n    // Кладем в this и в других функциях тянем без аргументов\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._settings.inputSelector));\n    this._buttonElement = this._formElement.querySelector(this._settings.submitButtonSelector);\n  }\n\n  // Метод показа ошибки валидации\n  FormValidator_createClass(FormValidator, [{\n    key: "_showInputError",\n    value: function _showInputError(inputElement, errorMessage) {\n      // Деструктуризация (сокращение длинных записей далее по коду, избавление от дублирования строк):\n      // Достаем из объекта settings значения свойств с названными ключами и кладем в одноименные переменные\n      var _this$_settings = this._settings,\n        inputErrorClass = _this$_settings.inputErrorClass,\n        errorClass = _this$_settings.errorClass;\n      var errorElement = this._formElement.querySelector(".".concat(inputElement.id, "-error"));\n      inputElement.classList.add(inputErrorClass);\n      errorElement.textContent = errorMessage;\n      errorElement.classList.add(errorClass);\n    }\n\n    // Метод скрытия ошибки валидации\n  }, {\n    key: "_hideInputError",\n    value: function _hideInputError(inputElement) {\n      var _this$_settings2 = this._settings,\n        inputErrorClass = _this$_settings2.inputErrorClass,\n        errorClass = _this$_settings2.errorClass;\n      var errorElement = this._formElement.querySelector(".".concat(inputElement.id, "-error"));\n      inputElement.classList.remove(inputErrorClass);\n      errorElement.classList.remove(errorClass);\n      errorElement.textContent = \'\';\n    }\n\n    // Методы проверки валидности полей формы\n  }, {\n    key: "_isInputValid",\n    value: function _isInputValid(inputElement) {\n      !inputElement.validity.valid ? this._showInputError(inputElement, inputElement.validationMessage) : this._hideInputError(inputElement);\n    }\n  }, {\n    key: "_hasInvalidInput",\n    value: function _hasInvalidInput() {\n      return this._inputList.some(function (inputElement) {\n        return !inputElement.validity.valid;\n      });\n    }\n\n    // Публичный метод отключения кнопки\n  }, {\n    key: "disableSubmitButton",\n    value: function disableSubmitButton() {\n      var inactiveButtonClass = this._settings.inactiveButtonClass;\n      this._buttonElement.classList.add(inactiveButtonClass);\n      this._buttonElement.setAttribute(\'disabled\', true);\n    }\n\n    // Метод включения кнопки\n  }, {\n    key: "_enableSubmitButton",\n    value: function _enableSubmitButton() {\n      var inactiveButtonClass = this._settings.inactiveButtonClass;\n      this._buttonElement.classList.remove(inactiveButtonClass);\n      this._buttonElement.removeAttribute(\'disabled\');\n    }\n\n    // Метод переключения кнопки\n  }, {\n    key: "_toggleButtonState",\n    value: function _toggleButtonState() {\n      this._hasInvalidInput() ? this.disableSubmitButton() : this._enableSubmitButton();\n    }\n\n    // Обработчики событий\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      this._inputList.forEach(function (inputElement) {\n        inputElement.addEventListener(\'input\', function () {\n          _this._isInputValid(inputElement);\n          _this._toggleButtonState();\n        });\n      });\n    }\n\n    // Публичный метод включения валидации полей формы\n  }, {\n    key: "enableValidation",\n    value: function enableValidation() {\n      this._formElement.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n      });\n      this._setEventListeners();\n    }\n\n    // Публичный метод очистки ошибок и управления кнопкой сабмита\n  }, {\n    key: "resetValidation",\n    value: function resetValidation() {\n      var _this2 = this;\n      this._toggleButtonState();\n      this._inputList.forEach(function (inputElement) {\n        _this2._hideInputError(inputElement);\n      });\n    }\n  }]);\n  return FormValidator;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/pages/index.js\n\n\n\n\n\n\n\n\n\n\n// КЛАССЫ\n// ФОТОКАРТОЧКИ\n// Попап с фотографией карточки\nvar popupPhotocardImage = new PopupWithImage(popupPhotoZoom);\npopupPhotocardImage.setEventListeners(); // слушатели на закрытие попапа\n\n// Функция получения на вход данных карточки в попапе карточки\nvar handleCardClick = function handleCardClick(name, link, alt) {\n  popupPhotocardImage.open(name, link, alt);\n};\n\n// Функция отрисовки фотокарточек\nvar createPhotocard = function createPhotocard(card) {\n  var photocard = new Card(card, \'.gallery-template\', handleCardClick);\n  var photocardElement = photocard.generateCard();\n  return photocardElement;\n};\n\n// Загрузка галереи фотокарточек на страницу\nvar photocardsList = new Section({\n  renderer: function renderer(item) {\n    photocardsList.addItem(createPhotocard(item));\n  }\n}, photoGallery);\n\n// Попап с добавлением пользователем новых фотокарточек (в data собираются значения инпутов (name))\nvar submitAddingPhotocardForm = function submitAddingPhotocardForm(data) {\n  // Добавление новой карточки в галерею\n  api.addNewPhotocard(data.photocardName, data.photocardLink).then(function (_ref) {\n    var name = _ref.name,\n      link = _ref.link;\n    photocardsList.addItem(createPhotocard({\n      name: name,\n      link: link\n    }));\n  }).catch(function (error) {\n    console.log("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: ".concat(error));\n  });\n  popupAddingPhotocard.close(); // закрытие попапа\n};\n\nvar popupAddingPhotocard = new PopupWithForm(popupTypeAddingPhotocard, submitAddingPhotocardForm);\npopupAddingPhotocard.setEventListeners(); // слушатели на закрытие попапа\n\n// Открытие попапа\nprofileAddButton.addEventListener(\'click\', function () {\n  popupAddingPhotocard.open(); // открытие попапа\n  validationPopupAddingPhotocard.resetValidation(); // очистка полей валидации\n});\n\n// Валидация попапа добавления фотокарточки\nvar validationPopupAddingPhotocard = new FormValidator(validationSettings, formAddingPhotocard);\nvalidationPopupAddingPhotocard.enableValidation();\nvalidationPopupAddingPhotocard.disableSubmitButton();\n\n// РЕДАКТИРОВАНИЕ ИНФОРМАЦИИ ПРОФИЛЯ В МОДАЛЬНОМ ОКНЕ (С СОХРАНЕНИЕМ ЗНАЧЕНИЙ, ВВОДИМЫХ ПОЛЬЗОВАТЕЛЕМ)\nvar editingUserInfo = new UserInfo({\n  profileName: \'.profile__name\',\n  profileJob: \'.profile__job\',\n  profileAvatar: \'.profile__avatar\'\n});\n\n// Сабмит формы редактирования информации о пользователе (данные собираются из полей формы)\nvar submitEditingUserInfoForm = function submitEditingUserInfoForm(data) {\n  // Изменение информации пользователя на странице при сабмите формы\n  api.editUserInfo(data.profileName, data.profileJob).then(function (user) {\n    editingUserInfo.setUserInfo(user.name, user.about); // "name" и "about" соответствуют ключам в Api\n    popupEditingUserInfoForm.close(); // закрытие попапа после успешного сабмита\n  }).catch(function (error) {\n    console.log("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0438 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435: ".concat(error));\n  });\n};\nvar popupEditingUserInfoForm = new PopupWithForm(popupTypeEditingProfileInfo, submitEditingUserInfoForm);\npopupEditingUserInfoForm.setEventListeners(); // навешивание слушателей на закрытие\n\nvar validationPopupProfile = new FormValidator(validationSettings, formEditingProfileInfo);\nvalidationPopupProfile.enableValidation(); // включение валидации полей попапа\n\nprofileEditButton.addEventListener(\'click\', function () {\n  popupEditingUserInfoForm.open(); // открытие попапа\n\n  // Получение значений со страницы\n  var input = editingUserInfo.getUserInfo();\n  nameInput.value = input.profileName;\n  jobInput.value = input.profileJob;\n  validationPopupProfile.resetValidation(); // очистка полей валидации\n});\n\n// API\n// Создание универсального класса, на котором вызываются методы, с общими данными во избежание дублирования кода\nvar api = new Api({\n  url: \'https://nomoreparties.co/v1/cohort-54\',\n  headers: {\n    authorization: \'ab13029f-8c56-4dec-b26e-24c2c3894c0c\',\n    \'Content-type\': \'application/json\'\n  }\n});\n\n// Получение информации о пользователе с сервера\napi.getUserInfo().then(function (user) {\n  editingUserInfo.setUserInfo(user.name, user.about, user.avatar); // "name" и "about" соответствуют ключам в Api\n}).catch(function (error) {\n  console.log("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0438 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435: ".concat(error));\n});\n\n// Загрузка галереи на страницу\napi.getPhotocards().then(function (photocards) {\n  photocardsList.renderItems(photocards);\n}).catch(function (error) {\n  console.log("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0433\\u0430\\u043B\\u0435\\u0440\\u0435\\u0438: ".concat(error));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///670\n')}},__webpack_exports__={};__webpack_modules__[670]()})();